syntax = "proto3";
package oauth;
option go_package = "food/oauth/proto/gen;oauthpb";
/*
客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0定义了四种授权方式。
授权码模式（authorization code）
简化模式（implicit）
密码模式（resource owner password credentials）
客户端模式（client credentials）

本项目使用的是密码模式
 */
message OAuthTokenRequest{
  string appId=1;//client_id
  string appSecret=2;//client_secret
  string username=3;
  string password=4;
  string grant_type=5;//表示授权类型，密码模式此处的值固定为"password"，必选项。
  string scope=6;//表示权限范围，可选项。 api / all
}

message OAuthTokenResponse{
  string access_token=1;
  int32 expires_in=2;
  string scope=3;
  string token_type=4;
}
message OAuthRemoveTokenRequest{
  string access_token=1;
}
message OAuthRemoveTokenResponse{
  int32 code=1;
  string msg=2;
}
message OAuthTokenVerifyRequest{
  string access_token=1;
}
message OAuthTokenVerifyResponse{
  int32 code=1;
  string msg=2;
}
service OAuthService{
  //rpc Token (OAuthTokenRequest) returns (OAuthTokenResponse);
  rpc Verify (OAuthTokenVerifyRequest) returns (OAuthTokenVerifyResponse);
  rpc RemoveToken (OAuthRemoveTokenRequest) returns (OAuthRemoveTokenResponse);
}

message GetUserRequest{
  string username=1;
}

message User{
  string username=1;
  string password=2;
  string authorities=3;

}

service UserService{
  rpc GetUserByUsername (GetUserRequest) returns (User);
}